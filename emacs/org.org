
The following commands jump to other headlines in the buffer.

C-c C-n (org-next-visible-heading)
Next heading.

C-c C-p (org-previous-visible-heading)
Previous heading.

C-c C-f (org-forward-heading-same-level)
Next heading same level.

C-c C-b (org-backward-heading-same-level)
Previous heading same level.

C-c C-u (outline-up-heading)
Backward to higher level heading.
*  insert a new same-level headline after current one?
org-insert-heading-respect-content
org-insert-subheading
c-enter: TODO-->Done




* 快捷键
选中某个Region text后
C-c | : 自动表格化, 默认以空格，逗号分割
2 C-c | : 跳过一个分割符，表格化

| 快捷键         | 说明                                                                                |
| TAB            | 切换到下一个单元格，如已是最后一个单元格，则新建一行并跳到该行第一个单元格          |
| M-S-right      | 在当前列前插入一列                                                                  |
| M-S-left       | 删除当前列                                                                          |
| M-S-down       | 在当前行前插入一行                                                                  |
| M-S-up         | 删除当前行                                                                          |
| C-m            | 移动到下一行，或新建一行                                                            |
| M-up/M-down    | 将当前行往上/下移动                                                                 |
| M-left/M-right | 将当前列往左/右移动                                                                 |
| C-c `          | 编辑当前单元格                                                                      |
| C-c C-x C-w    | 剪切某个区域的表格内容                                                              |
| C-c C-x C-y    | 拷贝复制的内容到表格                                                                |
| S-return       | 当单元格无内容时，将其上方第一个非空内容拷贝过来;否则拷贝当前内容到下一行并随之移动 |
| C-c C-c        | 强制表格重新排列                                                                    |
| C-c ^          | 表格排序                                                                            |
* formula
** sum column 
Assign a field-name using the ^ mark:
|---+---|
|   | 1 |
|   | 2 |
|   | 3 |
|---+---|
|   | 6 |
| ^ | x |
|---+---|
#+TBLFM: $x=vsum(@1..@-1)

The last row of a table is @> For example to get the sum for the third column in the last line, you can use the formula

@>$3=vsum(@2..@-1)
Maybe you have to adapt the @2, if you don't have a header line...

** other
"C-c '" 后能在一个独立的、临时的 buffer 中编辑公式，但我们也可以在表格下方手工添加以 "+TBLFM:" 开头的行，然后直接添加公式。
"@" 来表示行，用 "$" 来表示列，最简单的，"@3$2" 表示的是第三行第二列
下面这个表示左上角为第二行第一列单元格、右下角为第四行第三列单元格的区域，共包含 9 个单元格。

@2$1..@4$3
下面这个则表示"当前行"的第一列到第三列的区域:

$1..$3
在公式中，可以用 "@#" 表示当前行的行号，用 "$#" 表示当前列的列号，在一些稍复杂点的公式里会有用。

此外，还可以定义常量、变量，或者给某个单元格命名，然后引用它们。假设其名字为 "name"，那么 "$name" 就可以引用它了。常量的定义可以通过 "org-table-formula-constants" 来进行，这样定义的常量是全局的；如果要定义局部的常量，可以在org文件中添加诸如这样的行:

#+CONSTANTS: pi=3.14 eps=2.4e-6
还可以在当前表格引用其他表格的域，这需要其他表格被命名为某个名字，如"FOO"，我们要在另一个表格中使用其第三行第四列的域，将其值赋给当前表格的第五行第二列，则可以这样写:

@5$2=remote(FOO, @3$4)

* With source block

一个非常强大的功能就是可以插入各种语言的 source block，并且能去执行 source block 里的代码，接着将结果插入到当前的 Org mode 文档中来。

下图展示了在 Org mode 中插入 C++ 的 source block 并执行得到结果的过程:

org-src-block-evaluate.gif
同时，Org mode 中的表格数据是可以作为变量传递到 source block 中的，如下图所示:

org-src-block-read-tbl.gif
如上图所示，要将表格数据传递给 source block ，需要两个步骤

用 "#+NAME" 将表格命名为 "citas-data"
在 source block 的选项中，用 ":var tbl_data=citas-data" 将表格数据赋值给变量 "tbl_data"
对于下面这个表格，我可以可以用这个方法将数据传递给 source block ，然后用 matplotlib 来绘制图像。

#+NAME: citas-data
| Sede      | Max cites | H-index |
|-----------+-----------+---------|
| Chile     |    257.72 |   21.39 |
| Leeds     |    165.77 |   19.68 |
| Sao Paolo |     71.00 |   11.50 |
| Stockholm |    134.19 |   14.33 |
| Morelia   |    257.56 |   17.67 |
相应的 source block 为

#+BEGIN_SRC python :results file :var tbl_data=citas-data filename="./org-plot-example2.png"
import numpy as np
import matplotlib
import matplotlib.pyplot as plt

plt.style.use('ggplot')


bar_names = [row[0] for row in tbl_data]
h_index = [row[2] for row in tbl_data]
ind = np.arange(len(tbl_data))
width = 0.5

plt.bar(ind, h_index, width)
plt.title('Citas')
plt.xlabel('Sede')
plt.ylabel('H-index')
plt.xticks(ind + width/2., bar_names)

plt.savefig(filename)
return(filename)
#+END_SRC

* Emacs 粘贴中文乱码
(when (eq system-type 'windows-nt)  (set-next-selection-coding-system 'utf-16-le)  (set-selection-coding-system 'utf-16-le)  (set-clipboard-coding-system 'utf-16-le))
