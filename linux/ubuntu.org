* dns
a domain might resolve to different IP addresses on different machines
systemd-resolve --flush-caches
systemctl restart systemd-resolved
* firewalld
a zone which accepts all traffic already exists, and it is named trusted. By default, though, nothing is in this zone. So, you don't even need to create a zone, just add the IP address to the trusted zone.
firewall-cmd --zone=trusted --list-sources
firewall-cmd --zone=public --remove-source=10.104.30.88 --permanent

firewall-cmd --zone=trusted --add-source=10.104.30.88 --permanent
firewall-cmd --zone=trusted --add-source=10.110.198.50 --permanent
firewall-cmd --zone=trusted --add-source=172.28.36.0/24 --permanent

// open a port to be accessed by any host, must be in the publich zone
firewall-cmd --permanent --add-port=3009/tcp --zone=public
firewall-cmd --permanent --add-port=34444/tcp --zone=public

firewall-cmd --list-ports
firewall-cmd --reload
* install font
Copy the fonts to /usr/local/share/fonts or a subfolder (such as /usr/local/share/fonts/TTF) and then run sudo fc-cache -fv
you can confirm they are installed correctly by running fc-list | grep "<name-of-font>"

* [[https://askubuntu.com/questions/676374/how-to-disable-welcome-message-after-ssh-login][disable welcome message]]
The welcome messages are generated by the files residing in /etc/update-motd.d/.

From man update-motd:

Executable scripts in /etc/update-motd.d/* are executed by pam_motd(8) as the root user at each login, and this information is concatenated in /var/run/motd.

So if you don't want the outputs of those scripts upon login via ssh just remove the execute flag on them:

sudo chmod -x /etc/update-motd.d/*
Now if you want to show something you want upon login, you have two options:

Make a script, put it in /etc/update-motd.d/, make it executable, also make sure it outputs on STDOUT.

ssh has a Banner option. You can put the text in a file and set it in the Banner option so that the content of the file is shown upon login via ssh. Note that this is applicable to only ssh.

Banner /etc/foobar
From man 5 sshd_config:

 Banner  The contents of the specified file are sent to the remote user
         before authentication is allowed.  If the argument is “none” then
         no banner is displayed.  This option is only available for
         protocol version 2.  By default, no banner is displayed.
* apt install specific version
apt install libreadline8=8.0-4
apt list -a <package name>
* route
route add -host 172.28.55.89 dev enp68s0f1
route delete -host 172.28.55.89 dev enp68s0f1
route add -net 10.0.0.0/8 gw 192.168.1.1 eth0
* static ip config
vi /etc/netplan/00-installer-config.yaml
network:
  version: 2
  renderer: networkd
  ethernets:
    enp0s3:
      dhcp4: no
      addresses: [192.28.55.13/24]
      gateway4: 192.28.55.1
      nameservers:
        addresses: [192.168.58.110,8.8.8.8,8.8.4.4]

netplan apply
netplan --debug apply

* apt install docker.io
* modify root password first time
sudo passwd root

* allow root login
vim /etc/ssh/sshd_config
PermitRootLogin yes
systemctl restart sshd
* install jdk

I just went through the same process and I fixed the problem by manually installing java 8 on my ubuntu 18.04 machine. Hopefully my answer will help you.

Download the latest JAVA 8 SE development kit from here: https://www.oracle.com/technetwork/java/javase/downloads/java-archive-javase8-2177648.html
Open your terminal.
Type $mkdir /opt/jdk.
Untar Java in your new folder $tar -zxf jdk-8u5-linux-x64.tar.gz -C /opt/jdk.
Set oracle JDK as the default JVM by running those two instructions (or something around that depending on your configuration):
Note: Each bullet point is one single command

update-alternatives --install /usr/bin/java java /opt/jdk/jdk1.8.0_<YourVersion>/bin/java 100
update-alternatives --install /usr/bin/javac javac /opt/jdk/jdk1.8.0_<YourVersion>/bin/javac 100
You can check the result by running java -version !

Before I started, I went through those steps as well in order to remove completely java from my system: https://askubuntu.com/questions/84483/how-to-completely-uninstall-java#185250

The source I used for the manual installation of JAVA was this article: https://www.digitalocean.com/community/tutorials/how-to-manually-install-oracle-java-on-a-debian-or-ubuntu-vps

* settimezone
timedatectl list-timezones | grep Shang
timedatectl set-timezone Asia/Shanghai

* can not get ip address
Ubuntu server18.04输入ifconfig找不到IP地址

问题：

主机重启之后连不上网，输入ifconfig找不到IP地址，ping局域网的主机，bash显示network is unreachable

解决方式：

首先需要解决的第一个问题是让机器连上网

因为这台主机之前设计了静态IP，所以怀疑是静态IP的配置文件/etc/netplan/*.xml有问题。和网上配置静态IP的详细比对后，发现基本一致，问题并不在这。

搜索“输入ifconfig找不到IP地址”，网上给出了解决方式：

第一步：ifconfig enp6s0 up    开启enp6s0；命令行输入ifconfig后，发现已经有显示网口enp6s0，之前是只有lo。但是并没有IP地址。

注意！不同主机网口可能不一样，可以使用ifconfig -a查看主机有哪些网口

第二步：sudo dhclient enp6s0    使用动态主机配置协议动态的配置网络接口的网络参数。这个命令执行时间会有点长

第三步：sudo ifconfig enp6s0。然后在命令行输入ifconfig，会发现已经有IP地址，局域网和外网都能ping通。但是，IP地址并不是之前配的静态IP地址。命令行输入sudo netplan apply，结果 netplan: command not found

又出现了新的问题，，，，“netplan”这个命令没了，man netplan也显示没有该command

接下来需要安装netplan这个命令，sudo apt-get install netplan.io

最后，使静态IP的配置文件生效sudo netplan apply，用ifconfig查看网口enp6s0的IP设置成功，重启后再次确认没问题

* How can I make ubuntu--vg-ubuntu--lv consume the entire disk space available
# We need to resize the logical volume to use all the existing and free space of the volume group
$ lvm
lvm> lvextend -l +100%FREE /dev/ubuntu-vg/ubuntu-lv
lvm> exit

# And then, we need to resize the file system to use the new available space in the logical volume
$ resize2fs /dev/ubuntu-vg/ubuntu-lv
resize2fs 1.44.1 (24-Mar-2018)
Filesystem at /dev/ubuntu-vg/ubuntu-lv is mounted on /; on-line resizing required
old_desc_blocks = 1, new_desc_blocks = 58
The filesystem on /dev/ubuntu-vg/ubuntu-lv is now 120784896 (4k) blocks long.

# Finally, you can check that you now have available space:
$ df -h
Filesystem                         Size  Used Avail Use% Mounted on
udev                               3.9G     0  3.9G   0% /dev
tmpfs                              786M  1.2M  785M   1% /run
/dev/mapper/ubuntu--vg-ubuntu--lv  454G  3.8G  432G   1% /

* mount: unknown file system type LVM2_member
root@svennd:~# lvscan
  ACTIVE            '/dev/VolGroup00/LogVol00' [230.75 GiB] inherit
  ACTIVE            '/dev/VolGroup00/LogVol01' [1.94 GiB] inherit
now to mount :
mount /dev/VolGroup00/LogVol00 /mnt/disk


* find so version
readelf -d  /path/to/library.so |grep SONAME

* ldd *.so
find so dependencies
* To show the executable path along with the listening port, you can use the `netstat` command with the `-p` option or the `ss` command with the `-p` option. Here's how to do it:

Using `netstat`:

```bash
sudo netstat -tulnp | grep :80
```

Using `ss`:

```bash
sudo ss -tulnp | grep :80
```

The `-p` option displays the process ID (PID) and the name of the program that opened the sockets. This will allow you to see the executable path of the process listening on port 80.

* chmod o+t /tmp
o other
u user
g group
t stick bit : prevent other user who has reading access right from deleting your files
