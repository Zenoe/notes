#parent > * + * {
  margin-top: 30px;
}
This will be applied to all direct children except the first one, so you can think of it as a gap between elements.

* Combinations of Classes and IDs
The big point here is that you can target elements that have combinations of classes and IDs by stringing those selectors together without spaces.
#header.callout {  }
Select the element which has an ID of header and also a class name of callout.

double class selector
.three.four { color: red; }
<h1 class="three four">Double Class</h1>


#header .callout { }
Select all elements with the class name callout that are decendents of the element with an ID of header.

* not last child
<div class="main">
    <div class="sub"><img src='http://i.stack.imgur.com/6IFne.jpg' /></div>
    <div class="sub"><img src='http://i.stack.imgur.com/6IFne.jpg' /></div>
    <div class="sub"><img src='http://i.stack.imgur.com/6IFne.jpg' /></div>
</div>
.main{
    border:1px solid;
    width:auto;
    display:inline;
}
.sub{
    display:inline-block;
    width:50px;
    height:20px;
    border:1px solid blue;
}

.sub:not(:last-child){
    margin-right: 20px;
}
div > *:not(:last-child) {
margin-right: 30px;
}

.parent_class_name{
  gap: 30px;
}
* match direct childs

div.test > th says any <th> which is a **direct** child of <div class="test">, which means it will match <div class="test"><th>this</th></div> but won't match <div class="test"><table><th>this</th></table></div>
(use-package evil-collection
  )
